name: release images

on:
  push:
    branches:
      - master

    tags:
      - v*

  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Install stable toolchain
        id: toolchain
        uses: dtolnay/rust-toolchain@stable

      - run: rustup override set ${{steps.toolchain.outputs.name}}

      - uses: Swatinem/rust-cache@v2

      - name: Install UPX
        uses: crazy-max/ghaction-upx@v3
        with:
          install-only: true
          version: latest

      - name: Run tests
        run: |
          make images
          make test-images

  push:
    needs: test

    runs-on: ubuntu-latest

    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v5

      - name: Install stable toolchain
        id: toolchain
        uses: dtolnay/rust-toolchain@stable

      - run: rustup override set ${{steps.toolchain.outputs.name}}

      - name: Install UPX
        uses: crazy-max/ghaction-upx@v3
        with:
          install-only: true
          version: latest

      - name: Build image
        run: |
          make images

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx for multiarch images
        uses: docker/setup-buildx-action@v3

      - name: Push image
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          IMAGE_VERSION=$VERSION make push-images
